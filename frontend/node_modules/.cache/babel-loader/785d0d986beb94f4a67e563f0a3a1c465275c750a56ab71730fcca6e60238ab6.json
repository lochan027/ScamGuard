{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, addDoc, getDocs, query, orderBy, limit, serverTimestamp } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDoTztz2TVK_s1Jm1m4x8U6GtLqWnce2kE\",\n  authDomain: \"scammerdetection.firebaseapp.com\",\n  projectId: \"scammerdetection\",\n  storageBucket: \"scammerdetection.firebasestorage.app\",\n  messagingSenderId: \"747621991332\",\n  appId: \"1:747621991332:web:9d0dc613f839503c447731\",\n  measurementId: \"G-Z5GKXFDL78\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firestore\nexport const db = getFirestore(app);\n\n// Firestore helper functions\nexport const saveSubmission = async submissionData => {\n  try {\n    const docRef = await addDoc(collection(db, 'submissions'), {\n      ...submissionData,\n      timestamp: serverTimestamp()\n    });\n    return docRef.id;\n  } catch (error) {\n    console.error('Error saving to Firebase:', error);\n    throw error;\n  }\n};\nexport const saveNode = async nodeData => {\n  try {\n    const docRef = await addDoc(collection(db, 'nodes'), {\n      ...nodeData,\n      timestamp: serverTimestamp()\n    });\n    return docRef.id;\n  } catch (error) {\n    console.error('Error saving node to Firebase:', error);\n    throw error;\n  }\n};\nexport const saveEdge = async edgeData => {\n  try {\n    const docRef = await addDoc(collection(db, 'edges'), edgeData);\n    return docRef.id;\n  } catch (error) {\n    console.error('Error saving edge to Firebase:', error);\n    throw error;\n  }\n};\nexport const getSubmissions = async () => {\n  try {\n    const q = query(collection(db, 'submissions'), orderBy('timestamp', 'desc'), limit(100));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting submissions from Firebase:', error);\n    throw error;\n  }\n};\nexport const getGraphData = async () => {\n  try {\n    const [nodesSnapshot, edgesSnapshot] = await Promise.all([getDocs(collection(db, 'nodes')), getDocs(collection(db, 'edges'))]);\n    const nodes = nodesSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    const edges = edgesSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    return {\n      nodes,\n      edges\n    };\n  } catch (error) {\n    console.error('Error getting graph data from Firebase:', error);\n    throw error;\n  }\n};\nexport default app;","map":{"version":3,"names":["initializeApp","getFirestore","collection","addDoc","getDocs","query","orderBy","limit","serverTimestamp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","saveSubmission","submissionData","docRef","timestamp","id","error","console","saveNode","nodeData","saveEdge","edgeData","getSubmissions","q","querySnapshot","docs","map","doc","data","getGraphData","nodesSnapshot","edgesSnapshot","Promise","all","nodes","edges"],"sources":["/Users/logsyc/SDA/frontend/src/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, addDoc, getDocs, query, orderBy, limit, serverTimestamp } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDoTztz2TVK_s1Jm1m4x8U6GtLqWnce2kE\",\n  authDomain: \"scammerdetection.firebaseapp.com\",\n  projectId: \"scammerdetection\",\n  storageBucket: \"scammerdetection.firebasestorage.app\",\n  messagingSenderId: \"747621991332\",\n  appId: \"1:747621991332:web:9d0dc613f839503c447731\",\n  measurementId: \"G-Z5GKXFDL78\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firestore\nexport const db = getFirestore(app);\n\n// Firestore helper functions\nexport const saveSubmission = async (submissionData) => {\n  try {\n    const docRef = await addDoc(collection(db, 'submissions'), {\n      ...submissionData,\n      timestamp: serverTimestamp()\n    });\n    return docRef.id;\n  } catch (error) {\n    console.error('Error saving to Firebase:', error);\n    throw error;\n  }\n};\n\nexport const saveNode = async (nodeData) => {\n  try {\n    const docRef = await addDoc(collection(db, 'nodes'), {\n      ...nodeData,\n      timestamp: serverTimestamp()\n    });\n    return docRef.id;\n  } catch (error) {\n    console.error('Error saving node to Firebase:', error);\n    throw error;\n  }\n};\n\nexport const saveEdge = async (edgeData) => {\n  try {\n    const docRef = await addDoc(collection(db, 'edges'), edgeData);\n    return docRef.id;\n  } catch (error) {\n    console.error('Error saving edge to Firebase:', error);\n    throw error;\n  }\n};\n\nexport const getSubmissions = async () => {\n  try {\n    const q = query(collection(db, 'submissions'), orderBy('timestamp', 'desc'), limit(100));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting submissions from Firebase:', error);\n    throw error;\n  }\n};\n\nexport const getGraphData = async () => {\n  try {\n    const [nodesSnapshot, edgesSnapshot] = await Promise.all([\n      getDocs(collection(db, 'nodes')),\n      getDocs(collection(db, 'edges'))\n    ]);\n    \n    const nodes = nodesSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    \n    const edges = edgesSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    \n    return { nodes, edges };\n  } catch (error) {\n    console.error('Error getting graph data from Firebase:', error);\n    throw error;\n  }\n};\n\nexport default app;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}