{"ast":null,"code":"import _objectSpread from\"/Users/logsyc/SDA/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{initializeApp}from'firebase/app';import{getFirestore,collection,addDoc,getDocs,query,orderBy,limit,serverTimestamp}from'firebase/firestore';const firebaseConfig={apiKey:process.env.REACT_APP_FIREBASE_API_KEY||\"AIzaSyDoTztz2TVK_s1Jm1m4x8U6GtLqWnce2kE\",authDomain:process.env.REACT_APP_FIREBASE_AUTH_DOMAIN||\"scammerdetection.firebaseapp.com\",projectId:process.env.REACT_APP_FIREBASE_PROJECT_ID||\"scammerdetection\",storageBucket:process.env.REACT_APP_FIREBASE_STORAGE_BUCKET||\"scammerdetection.firebasestorage.app\",messagingSenderId:process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID||\"747621991332\",appId:process.env.REACT_APP_FIREBASE_APP_ID||\"1:747621991332:web:9d0dc613f839503c447731\",measurementId:process.env.REACT_APP_FIREBASE_MEASUREMENT_ID||\"G-Z5GKXFDL78\"};// Initialize Firebase\nconst app=initializeApp(firebaseConfig);// Initialize Firestore\nexport const db=getFirestore(app);// Firestore helper functions\nexport const saveSubmission=async submissionData=>{try{const docRef=await addDoc(collection(db,'submissions'),_objectSpread(_objectSpread({},submissionData),{},{timestamp:serverTimestamp()}));return docRef.id;}catch(error){console.error('Error saving to Firebase:',error);throw error;}};export const saveNode=async nodeData=>{try{const docRef=await addDoc(collection(db,'nodes'),_objectSpread(_objectSpread({},nodeData),{},{timestamp:serverTimestamp()}));return docRef.id;}catch(error){console.error('Error saving node to Firebase:',error);throw error;}};export const saveEdge=async edgeData=>{try{const docRef=await addDoc(collection(db,'edges'),edgeData);return docRef.id;}catch(error){console.error('Error saving edge to Firebase:',error);throw error;}};export const getSubmissions=async()=>{try{const q=query(collection(db,'submissions'),orderBy('timestamp','desc'),limit(100));const querySnapshot=await getDocs(q);return querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));}catch(error){console.error('Error getting submissions from Firebase:',error);throw error;}};export const getGraphData=async()=>{try{const[nodesSnapshot,edgesSnapshot]=await Promise.all([getDocs(collection(db,'nodes')),getDocs(collection(db,'edges'))]);const nodes=nodesSnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));const edges=edgesSnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));return{nodes,edges};}catch(error){console.error('Error getting graph data from Firebase:',error);throw error;}};export default app;","map":{"version":3,"names":["initializeApp","getFirestore","collection","addDoc","getDocs","query","orderBy","limit","serverTimestamp","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","app","db","saveSubmission","submissionData","docRef","_objectSpread","timestamp","id","error","console","saveNode","nodeData","saveEdge","edgeData","getSubmissions","q","querySnapshot","docs","map","doc","data","getGraphData","nodesSnapshot","edgesSnapshot","Promise","all","nodes","edges"],"sources":["/Users/logsyc/SDA/frontend/src/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, addDoc, getDocs, query, orderBy, limit, serverTimestamp } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY || \"AIzaSyDoTztz2TVK_s1Jm1m4x8U6GtLqWnce2kE\",\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN || \"scammerdetection.firebaseapp.com\",\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID || \"scammerdetection\",\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET || \"scammerdetection.firebasestorage.app\",\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID || \"747621991332\",\n  appId: process.env.REACT_APP_FIREBASE_APP_ID || \"1:747621991332:web:9d0dc613f839503c447731\",\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID || \"G-Z5GKXFDL78\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firestore\nexport const db = getFirestore(app);\n\n// Firestore helper functions\nexport const saveSubmission = async (submissionData) => {\n  try {\n    const docRef = await addDoc(collection(db, 'submissions'), {\n      ...submissionData,\n      timestamp: serverTimestamp()\n    });\n    return docRef.id;\n  } catch (error) {\n    console.error('Error saving to Firebase:', error);\n    throw error;\n  }\n};\n\nexport const saveNode = async (nodeData) => {\n  try {\n    const docRef = await addDoc(collection(db, 'nodes'), {\n      ...nodeData,\n      timestamp: serverTimestamp()\n    });\n    return docRef.id;\n  } catch (error) {\n    console.error('Error saving node to Firebase:', error);\n    throw error;\n  }\n};\n\nexport const saveEdge = async (edgeData) => {\n  try {\n    const docRef = await addDoc(collection(db, 'edges'), edgeData);\n    return docRef.id;\n  } catch (error) {\n    console.error('Error saving edge to Firebase:', error);\n    throw error;\n  }\n};\n\nexport const getSubmissions = async () => {\n  try {\n    const q = query(collection(db, 'submissions'), orderBy('timestamp', 'desc'), limit(100));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting submissions from Firebase:', error);\n    throw error;\n  }\n};\n\nexport const getGraphData = async () => {\n  try {\n    const [nodesSnapshot, edgesSnapshot] = await Promise.all([\n      getDocs(collection(db, 'nodes')),\n      getDocs(collection(db, 'edges'))\n    ]);\n    \n    const nodes = nodesSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    \n    const edges = edgesSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    \n    return { nodes, edges };\n  } catch (error) {\n    console.error('Error getting graph data from Firebase:', error);\n    throw error;\n  }\n};\n\nexport default app;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}